#include <math.h>

#include "MathFunctions.h"


//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

const double eps = 1e-50;

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

double ctg(double arg)
{
    double tg = tan(arg);
    if (IsDoubleEqual(tg, 0, eps)) return INFINITY;
    return 1 / tg;
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

double actg(double arg)
{
    return Pi /2  - atan(arg);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

double ctgh(double arg)
{
    double tgh = tanh(arg);
    if (IsDoubleEqual(tgh, 0, eps)) return INFINITY;
    return 1 / tanh(arg);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

double factorial(long unsigned int arg)
{
    if (arg == 0)
    {
        return 1;
    }

    return ((double) arg) * factorial(arg - 1);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

bool IsDoubleEqual(double firstNum, double secondNum, double epsilon)
{
    double subNum = firstNum - secondNum;

    bool flag1 = (subNum < epsilon);
    bool flag2 = (subNum > -epsilon);

    return (flag1 && flag2);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
